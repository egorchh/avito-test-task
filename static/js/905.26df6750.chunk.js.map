{"version":3,"file":"static/js/905.26df6750.chunk.js","mappings":"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","sources":["assets/images/refresh.svg","components/ui/RefreshButton/RefreshButton.tsx","services/postsAPI.ts","store/action-creators/posts.ts","store/action-creators/comments.ts","store/action-creators/index.ts","hooks/useAction.ts","hooks/useTypedSelector.ts","assets/images/like.svg","components/PostItem/PostsItem.tsx","components/PostsList/PostsList.tsx","pages/MainPage/MainPage.tsx","services/commentsAPI.ts","utils/converTime.ts"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgRefresh(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    height: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.463 4.433A9.961 9.961 0 0 1 12 2c5.523 0 10 4.477 10 10 0 2.136-.67 4.116-1.81 5.74L17 12h3A8 8 0 0 0 6.46 6.228l-.997-1.795zm13.074 15.134A9.961 9.961 0 0 1 12 22C6.477 22 2 17.523 2 12c0-2.136.67-4.116 1.81-5.74L7 12H4a8 8 0 0 0 13.54 5.772l.997 1.795z\",\n    fill: \"rgba(245,70,70,1)\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRefresh);\nexport default __webpack_public_path__ + \"static/media/refresh.8af170e78212903462f8865a1087397c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\nimport './refreshButton.css';\r\n\r\nimport refreshSVG from '../../../assets/images/refresh.svg';\r\n\r\ninterface RefreshButtonProps {\r\n  refreshHandler: () => void;\r\n}\r\n\r\nconst RefreshButton: React.FC<RefreshButtonProps> = ({refreshHandler}) => {\r\n  return (\r\n    <button \r\n      className=\"refresh-button\"\r\n      onClick={refreshHandler}\r\n    >\r\n      <img \r\n        className=\"refresh-button__img\" \r\n        src={refreshSVG} \r\n        alt={\"Кнопка обновления списка комментариев\"}\r\n      />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RefreshButton;","import axios from 'axios';\r\nimport { IPost } from '../types/posts';\r\n\r\nexport const baseURL = 'https://hacker-news.firebaseio.com/v0/';\r\nexport const newPostsURL = `${baseURL}newstories.json`;\r\nexport const PostURL = `${baseURL}item/`;\r\n\r\n\r\n\r\nexport const getPost = async (postId: number): Promise<IPost> => {\r\n  const result = await axios.get(`${PostURL + postId}.json`);\r\n\r\n  return result.data;\r\n};\r\n\r\nexport const getPostIds = async (): Promise<number[]> => {\r\n  const result = await axios.get(newPostsURL);\r\n\r\n  return result.data;\r\n};","import { Dispatch } from \"redux\"\r\nimport { getPost, getPostIds } from \"../../services/postsAPI\";\r\nimport { PostsAction, PostsActionTypes, IPost } from \"../../types/posts\"\r\n\r\nexport const fetchPosts = () => {\r\n  return async (dispatch: Dispatch<PostsAction>) => {\r\n    try {\r\n      dispatch({type: PostsActionTypes.FETCH_POSTS});\r\n      const postIds = await getPostIds()\r\n\r\n      const posts: IPost[] = await Promise.all(postIds.slice(0, 100).map(id => {\r\n        return getPost(id)\r\n      }));\r\n\r\n      dispatch({type: PostsActionTypes.FETCH_POSTS_SUCCESS, payload: posts})\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PostsActionTypes.FETCH_POSTS_ERROR, \r\n        payload: 'Произошла ошибка при получении новостей'\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchOnePost = (id: number) => {\r\n  return async (dispatch: Dispatch<PostsAction>) => {\r\n    try {\r\n      dispatch({type: PostsActionTypes.FETCH_ONE_POST});\r\n\r\n      const post: IPost = await getPost(id);\r\n\r\n      dispatch({type: PostsActionTypes.FETCH_ONE_POST_SUCCESS, payload: post})\r\n    } catch (error) {\r\n      dispatch({type: PostsActionTypes.FETCH_ONE_POST_ERROR, payload: 'Произошла ошибка при получении данной новости'})\r\n    }\r\n  }\r\n}","import { Dispatch } from \"redux\"\r\nimport { getComment } from \"../../services/commentsAPI\";\r\nimport { CommentsAction, CommentsActionTypes, IComment } from \"../../types/comments\"\r\n\r\nexport const fetchComments = (commentsIds: number[]) => {\r\n  return async (dispatch: Dispatch<CommentsAction>) => {\r\n    try {\r\n      dispatch({type: CommentsActionTypes.FETCH_COMMENTS});\r\n\r\n      const comments: IComment[] = await Promise.all(commentsIds.map(id => {\r\n        return getComment(id)\r\n      }))\r\n\r\n      dispatch({type: CommentsActionTypes.FETCH_COMMENTS_SUCCESS, payload: comments})\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CommentsActionTypes.FETCH_COMMENTS_ERROR, \r\n        payload: 'Произошла ошибка при получении комментариев'\r\n      })\r\n    }\r\n  }\r\n}","import * as PostsActionCreators from './posts'\r\nimport * as CommentsActionCreators from './comments'\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    ...PostsActionCreators,\r\n    ...CommentsActionCreators\r\n}","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ActionCreators from \"../store/action-creators\";\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(ActionCreators, dispatch)\r\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLike(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    height: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6 8H21a2 2 0 0 1 2 2v2.104a2 2 0 0 1-.15.762l-3.095 7.515a1 1 0 0 1-.925.619H2a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1h3.482a1 1 0 0 0 .817-.423L11.752.85a.5.5 0 0 1 .632-.159l1.814.907a2.5 2.5 0 0 1 1.305 2.853L14.6 8zM7 10.588V19h11.16L21 12.104V10h-6.4a2 2 0 0 1-1.938-2.493l.903-3.548a.5.5 0 0 0-.261-.571l-.661-.33-4.71 6.672c-.25.354-.57.644-.933.858zM5 11H3v8h2v-8z\",\n    fill: \"rgba(249,229,58,1)\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLike);\nexport default __webpack_public_path__ + \"static/media/like.103af92c36113ea479cbb44729e0a088.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\nimport { covertTimeToDate } from '../../utils/converTime';\r\n\r\nimport './postsItem.css';\r\n\r\nimport likeSVG from '../../assets/images/like.svg'\r\n\r\ninterface PostsItemProps {\r\n  title: string;\r\n  score: number;\r\n  by: string;\r\n  time: number\r\n}\r\n\r\nconst PostItem: React.FC<PostsItemProps> = ({title, score, by, time}) => {\r\n  return (\r\n    <li className='posts-item'>\r\n      <div className=\"posts-item__headline-wrapper\">\r\n        <h3 className='posts-item__title'>\r\n          {title}\r\n        </h3>\r\n        <div className='posts-item__score-wrapper'>\r\n          <p className='posts-item__score-value'>{score}</p>\r\n          <img className='posts-item__score-img' src={likeSVG} alt=\"Изображение лайка\" />\r\n        </div>\r\n      </div>\r\n      <div className='posts-item__descr-wrapper'>\r\n        <p className='posts-item__descr-author'>\r\n          {by}\r\n        </p>\r\n        <p className='posts-item__descr-date'>\r\n          {covertTimeToDate(time)}\r\n        </p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PostItem;","import React, { useEffect } from 'react';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { useActions } from '../../hooks/useAction';\r\nimport { Link } from 'react-router-dom';\r\nimport type {} from 'redux-thunk/extend-redux'\r\n\r\nimport PostsItem from '../PostItem/PostsItem';\r\nimport Spinner from '../ui/Spinner/Spinner';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\n\r\nimport './postsList.css'\r\n\r\nconst PostsList: React.FC = () => {\r\n  const {posts, loading, error} = useTypedSelector(state => state.posts);\r\n  const {fetchPosts} = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchPosts()\r\n\r\n    // автоматическое обновление постов\r\n\r\n    const timerId = setInterval(fetchPosts, 60000);\r\n\r\n    return () => {\r\n      clearInterval(timerId);\r\n    };\r\n    \r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const renderPostsList = () => {\r\n    const news = posts.map(({id, title, score, by, time}) => {\r\n      return (\r\n        <Link \r\n          key={id} \r\n          className='posts-link' to={`/posts/${id}`}\r\n        >\r\n          <PostsItem\r\n            title={title}\r\n            score={score}\r\n            by={by}\r\n            time={time}\r\n          />\r\n        </Link>\r\n      )\r\n    })\r\n\r\n    return (\r\n      \r\n        <ul className='posts-list'>\r\n            {news}\r\n        </ul>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorMessage />\r\n  }\r\n\r\n  return (\r\n    <div className='posts'>\r\n      {\r\n        loading ? <Spinner size={150} /> : renderPostsList()\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsList;","import PostsList from '../../components/PostsList/PostsList';\r\nimport { useActions } from '../../hooks/useAction';\r\nimport { Helmet } from \"react-helmet\";\r\nimport RefreshButton from '../../components/ui/RefreshButton/RefreshButton';\r\n\r\nimport './mainPage.css'\r\n\r\nconst MainPage = () => {\r\n  const {fetchPosts} = useActions();\r\n\r\n  const refreshHandler = () => {\r\n    fetchPosts();\r\n  }\r\n  \r\n  return (\r\n    <div className='main-page'>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Hacker News\" />\r\n        <title>Hacker News</title>\r\n      </Helmet>\r\n      <div className=\"headline\">\r\n        <h1 className='headline-title'>\r\n          Hacker News:\r\n        </h1>\r\n        <RefreshButton refreshHandler={refreshHandler} />\r\n      </div>\r\n      <PostsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;","import axios from 'axios';\r\nimport { IComment } from '../types/comments';\r\n\r\nexport const baseURL = 'https://hacker-news.firebaseio.com/v0/';\r\nexport const commentURL = `${baseURL}item/`;\r\n\r\nexport const getComment = async (commentId: number): Promise<IComment> => {\r\n  const result = await axios.get(`${commentURL + commentId}.json`);\r\n\r\n  return result.data;\r\n};\r\n\r\n\r\nexport async function getNestedComments(commenstIds: number[]) {\r\n  const result = await Promise.all(commenstIds.map(id => {\r\n    return getComment(id);\r\n  }))\r\n\r\n  return result;\r\n}","export function covertTimeToDate(time: number): string {\r\n    const date = new Date(time * 1000);\r\n    const [month, day, year] = [date.getMonth(), date.getDate(), date.getFullYear()];\r\n    const [hour, minutes] = [date.getHours(), date.getMinutes(), date.getSeconds()];\r\n\r\n    return `${getZero(hour)}:${getZero(minutes)} ${getZero(day)}/${getZero(month)}/${year}`\r\n  }\r\n\r\nfunction getZero(time: number): string {\r\n  if (time >= 0 && time <= 9 ) {\r\n    return `0${time}`;\r\n  }\r\n\r\n  return `${time}`;\r\n}"],"names":["refreshHandler","className","onClick","src","refreshSVG","alt","baseURL","newPostsURL","PostURL","getPost","postId","axios","result","data","getPostIds","fetchPosts","dispatch","type","PostsActionTypes","postIds","Promise","all","slice","map","id","posts","payload","fetchOnePost","post","fetchComments","commentsIds","CommentsActionTypes","getComment","comments","PostsActionCreators","CommentsActionCreators","useActions","useDispatch","bindActionCreators","ActionCreators","useTypedSelector","useSelector","title","score","by","time","likeSVG","covertTimeToDate","state","loading","error","useEffect","timerId","setInterval","clearInterval","ErrorMessage","Spinner","size","news","to","PostsItem","renderPostsList","Helmet","name","content","RefreshButton","commentURL","commentId","getNestedComments","commenstIds","date","Date","getMonth","getDate","getFullYear","month","day","year","getHours","getMinutes","getSeconds","minutes","getZero"],"sourceRoot":""}